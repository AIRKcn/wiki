#!/bin/sh
##
# [Syncthing 是类似 BTSync 的一个开源实现，提供无中心的数据同步服务支持]
#
# 用于ubuntu/debain系统服务使用
# version : 1
# code by Robert <cnwangyl@gmail.com>
# blog : http://blog.yongliang.info
# qq : 18997041
# 使用方法：
# 1. 此代码内容存放至 /etc/init.d/syncthing 文件中
# 2. chmod +x /etc/init.d/syncthing
# 3. 修改此代码片断中的相关变量配置
# 4. 此服务中使用到了 syncthing 用户进行启动服务
#     - useradd syncthing
#     - passwd syncthing
#     - mkdir /home/syncthing && chown -R syncthing:syncthing /home/syncthing
# 5. 执行此脚本的用户应为 root 用户
# 代码拙劣，还请见谅，如果更新或建议 或 有使用问题可以QQ交流
##

### BEGIN INIT INFO
# Provides: linux-restricted-modules
# Required-Start: $local_fs
# Required-Stop:
# Default-Start: S 0 3 6
# Default-Stop:
# Short-Description: Setup the linux restricted modules
# Description: Link the linux restricted modules at run time.
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

NAME=syncthings
DESC=Syncthings

USER=syncthing
HOME_PATH=/home/syncthing
CONF_PATH=$HOME_PATH/.config/syncthing
EXEC_NAME=syncthing
PID_FILE=/var/run/syncthing.pid
LOG_FILE=/var/log/syncthing.log

EXEC_DEAMON="$EXEC_NAME -home=$CONF_PATH -logfile=$LOG_FILE -no-browser"


#
# Function that starts the daemon/service
#
do_start()
{
	RETVAL=0
	PID=$(pgrep -f "$EXEC_DEAMON")
	if ! [ -z "$PID" ] ; then
		unset PID
		return "$RETVAL"
	fi
	su $USER -c "$EXEC_DEAMON > /dev/null &"
	PID=$(pgrep -f "$EXEC_DEAMON")
	if ! [ -z "$PID" ] ; then
		RETVAL=1
		echo "$PID" > $PID_FILE
	fi
	unset PID
	return "$RETVAL"
}


#
# Function that stops the daemon/service
#
do_stop()
{
	RETVAL=0
	PID=$(pgrep -f "$EXEC_DEAMON")
        if ! [ -z "$PID" ] ; then
		kill -9 $PID
		RETVAL=1
        fi
	return "$RETVAL"
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_restart() {
	do_stop
	do_start
	return 0
}


case "$1" in
	start)
		do_start
		case "$?" in
			0) echo "ERROR : $EXEC_NAME start fail" ;;
			1) echo "SUCCESS : $EXEC_NAME is started" ;;
		esac
		;;
	stop)
		do_stop
		case "$?" in
			0) echo "ERROR : $EXEC_NAME start fail" ;;
			1) echo "SUCCESS : $EXEC_NAME is started" ;;
		esac
		;;
	restart)
		do_restart
		;;
	status)
		PID=$(pgrep -f "$EXEC_DEAMON")
		if ! [ -z "$PID" ] ; then
			echo "STATUS : $EXEC_NAME is running ($PID)"
		else
			echo "STATUS : $EXEC_NAME is not running"
		fi
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|status}">&2
		exit 3
		;;
esac

:
